@model OrderPlaceModel

@{
    ViewData["Title"] = "Sipariş Geç";
}

@{
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPage ?? 1;
    int pageRange = 10;
    int startPage = Math.Max(1, currentPage - (pageRange / 2));
    int endPage = Math.Min(totalPages, startPage + pageRange - 1);
}

<h1>@ViewData["Title"]</h1>

<div class="mb-3 row">
    <div class="col-sm-4">
        <form asp-controller="Order" asp-action="GetItemCategoriesByItemCode" method="get" id="firstFilterForm">
            <select name="SelectedItemCode" class="form-select" id="firstFilter">
                <option selected>Seçiniz..</option>
                @foreach (var item in Model.ItemCategories)
                {
                    <option value="@item.Code">@item.Description</option>
                }
            </select>
        </form>
    </div>
    <div class="col-sm-4">
        <select class="form-select" id="secondFilter">
            <option selected>Seçiniz..</option>
            @try{
                foreach (var item in Model.ItemCategoriesById)
                {
                    <option value="@item.Code">@item.Description</option>
                }

            }catch{

            }
        </select>
    </div>
    <label class="col-sm-4 col-form-label">Stoklar Anlık Olarak Değişebilir</label>
</div>


<nav>
    <ul class="pagination">
        @if (currentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Place", "Order", new { page = 1 })">&laquo;</a>
            </li>

            <li class="page-item">
                <a class="page-link" href="@Url.Action("Place", "Order", new { page = currentPage - 1 })">&lt;</a>
            </li>
        }

        @for (int i = startPage; i <= endPage; i++)
        {
            <li class="page-item @(i == currentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action("Place", "Order", new { page = i })">@i</a>
            </li>
        }

        @if (currentPage < totalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Place", "Order", new { page = currentPage + 1 })">&gt;</a>
            </li>

            <li class="page-item">
                <a class="page-link" href="@Url.Action("Place", "Order", new { page = totalPages })">&raquo;</a>
            </li>
        }
    </ul>
</nav>


<partial name="_itemTable" />

<partial name="_itemdetailmodal" />

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const navLinks = document.querySelectorAll(".nav-tabs .nav-link");
        const tabContents = document.querySelectorAll(".tab-pane");

        navLinks.forEach(link => {
            link.addEventListener("click", function (event) {
                event.preventDefault();

                // Aktif sekmeyi kaldır
                navLinks.forEach(nav => nav.classList.remove("active"));
                tabContents.forEach(content => content.classList.remove("show", "active"));

                // Yeni aktif sekmeyi belirle
                this.classList.add("active");
                const tabIndex = this.getAttribute("data-tab");
                document.getElementById(`content${parseInt(tabIndex) + 1}`).classList.add("show", "active");
            });
        });
    });
</script>

<script>
    document.getElementById('firstFilter').addEventListener('change', function() {
        var selectedItemCode = this.value;

        if (selectedItemCode) {
            fetch(`/Order/GetItemCategoriesByItemCode?SelectedItemCode=${selectedItemCode}`)
                .then(response => response.json())
                .then(data => {
                    var secondFilter = document.getElementById('secondFilter');
                    secondFilter.innerHTML = '<option selected>Seçiniz..</option>';

                    data.forEach(function(item) {
                        var option = document.createElement('option');
                        option.value = item.code;
                        option.textContent = item.description;
                        secondFilter.appendChild(option);
                    });
                })
                .catch(error => console.error('Error:', error));
        }
    });
</script>