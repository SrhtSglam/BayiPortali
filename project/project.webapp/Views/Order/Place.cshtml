@model OrderPlaceModel

@{
    ViewData["Title"] = "Sipariş Geç";
}

@{
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPage ?? 1;
    int pageRange = 10;
    int startPage = Math.Max(1, currentPage - (pageRange / 2));
    int endPage = Math.Min(totalPages, startPage + pageRange - 1);
}

<h1>@ViewData["Title"]</h1>

<div class="pb-3">
    <div class="mb-3 row">
        <div class="col-sm-4">
            <form asp-controller="Order" asp-action="GetItemCategoriesByItemCode" method="get" id="firstFilterForm">
                <select name="SelectedItemCode" class="form-select" id="firstFilter">
                    <option selected>Seçiniz..</option>
                    @foreach (var item in Model.ItemCategories)
                    {
                        <option value="@item.Code">@item.Description</option>
                    }
                </select>
            </form>
        </div>
        <div class="col-sm-4">
            <select class="form-select" id="secondFilter">
                <option selected>Seçiniz..</option>
                @try
                {
                    foreach (var item in Model.ItemCategoriesById)
                    {
                        <option value="@item.Code">@item.Description</option>
                    }

                }
                catch
                {

                }
            </select>
        </div>
        <label class="col-sm-4 col-form-label">Stoklar Anlık Olarak Değişebilir</label>
    </div>


    <nav>
        <ul class="pagination">
            @if (currentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Place", "Order", new { page = 1 })">&laquo;</a>
                </li>

                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Place", "Order", new { page = currentPage - 1 })">&lt;</a>
                </li>
            }

            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Place", "Order", new { page = i })">@i</a>
                </li>
            }

            @if (currentPage < totalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Place", "Order", new { page = currentPage + 1 })">&gt;</a>
                </li>

                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Place", "Order", new { page = totalPages })">&raquo;</a>
                </li>
            }
        </ul>
    </nav>


    <partial name="_itemTable" />

    <div class="modal fade" id="InfoModal" tabindex="-1" aria-labelledby="InfoModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <ul class="nav nav-tabs">
                        <li class="nav-item">
                            <a href="#content1" class="nav-link active" data-bs-toggle="tab">Bilgi</a>
                        </li>
                        <li class="nav-item">
                            <a href="#content2" class="nav-link" data-bs-toggle="tab">Aksesuar & Bileşenler</a>
                        </li>
                        <li class="nav-item">
                            <a href="#content3" class="nav-link" data-bs-toggle="tab">Saf Malzemeler</a>
                        </li>
                    </ul>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="modal-body">
                    <div class="tab-content">
                        <div class="tab-pane show active" id="content1">
                            <div class="row">
                                <div class="col-6">
                                    <img src="" style="max-width: 480px;" class="rounded float-start" alt="">
                                </div>
                                <div class="col-6">
                                    <ul class="list-group">

                                    </ul>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane" id="content2">
                            <div class="row">
                                <div class="col-12">
                                    <p>Aksesuar & Bileşenler İçeriği Buraya Gelecek</p>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane" id="content3">
                            <div class="row">
                                <div class="col-12">
                                    <table class="table">
                                        <div class="alert alert-warning" role="alert"></div>
                                            Veri Bulunamadı!
                                        </div>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                    @* <button type="button" class="btn btn-success">Ekle</button> *@
                </div>
            </div>
        </div>
    </div>
</div>

<div id="settings" data-use-dynamic-image="@ViewBag.UseDynamicImage.ToString().ToLower()"></div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Tab bağlantılarını al
        const tabLinks = document.querySelectorAll('.nav-tabs .nav-link');
        const tabContents = document.querySelectorAll('.tab-pane');

        // Tab bağlantılarındaki tıklamayı dinle
        tabLinks.forEach(link => {
            link.addEventListener('click', function (event) {
                event.preventDefault(); // Varsayılan davranışı engelle

                // Aktif olan sekmeyi kaldır
                tabLinks.forEach(nav => nav.classList.remove('active'));
                tabContents.forEach(content => content.classList.remove('show', 'active'));

                // Yeni aktif sekmeyi belirle
                this.classList.add('active');
                
                // Data-bs-target özelliğinden hedef içeriği al
                const target = document.querySelector(this.getAttribute('href'));

                // Eğer hedef içerik varsa, onu göster
                if (target) {
                    target.classList.add('show', 'active');
                } else {
                    console.error("Hedef tab içeriği bulunamadı!");
                }
            });
        });

        // İlk filtre değişikliği olayı
        const firstFilter = document.getElementById('firstFilter');
        const secondFilter = document.getElementById('secondFilter');

        firstFilter.addEventListener('change', function () {
            var selectedItemCode = this.value;

            if (selectedItemCode) {
                fetch(`/Order/GetItemCategoriesByItemCode?selectedItemCode=${selectedItemCode}`)
                    .then(response => response.json())
                    .then(data => {
                        secondFilter.innerHTML = '<option selected>Seçiniz..</option>'; // Filtreyi temizle

                        data.forEach(function (item) {
                            var option = document.createElement('option');
                            option.value = item.code;
                            option.textContent = item.description;
                            secondFilter.appendChild(option);
                        });

                        secondFilter.disabled = false; // İkinci filtreyi aktif hale getir
                    })
                    .catch(error => console.error('Error:', error));
            }
        });

        // İkinci filtreye tıklama ve tabloyu güncelleme
        function filterTable() {
            var selectedCategory = firstFilter.value;
            var selectedSubCategory = secondFilter.value;

            fetch(`/Order/GetItemsByCategory?selectedItemCode=${selectedCategory}`)
                .then(response => response.json())
                .then(data => {
                    var tbody = document.querySelector("tbody");
                    tbody.innerHTML = "";

                    data.forEach(function (item) {
                        console.log("Item:", item);
                        var row = document.createElement("tr");
                        row.innerHTML = `
                            <td>${item.itemCategory}</td>
                            <td>${item.productGroup}</td>
                            <td><button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#InfoModal" data-itemcode="${item.itemCode}">Detay</button></td>
                            <td>${item.itemCode}</td>
                            <td>${item.itemDescription}</td>
                            <td>${item.alternativeCode}</td>
                            <td>${item.currencyCode}</td>
                            <td>${item.formattedPrice}</td>
                            <td><input type="text" class="form-control"></td>
                            <td><input type="number" class="form-control"></td>
                            <td><button type="button" class="btn btn-success">Ekle</button></td>
                        `;

                        // Eğer ikinci filtre seçiliyse, sadece ona uyanları göster
                        if (selectedSubCategory === "Seçiniz.." || selectedSubCategory === "" || item.ProductGroup === selectedSubCategory) {
                            tbody.appendChild(row);
                        }
                    });
                })
                .catch(error => console.error('Error:', error));
        }

        // Filtre değişikliklerinde tabloyu güncelle
        firstFilter.addEventListener("change", filterTable);
        secondFilter.addEventListener("change", filterTable);

        // Modal için ürün detayını yükleme
        $('#InfoModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var itemCode = button.data('itemcode');

            $('#InfoModal .modal-body').html('<p>Yükleniyor...</p>');

            fetch(`/Order/GetItemDetails?itemCode=${itemCode}`)
                .then(response => response.json())
                .then(data => {
                    console.log(data)

                    const useDynamicImage = document.getElementById('settings').dataset.useDynamicImage === 'true';

                    const imageHtml = useDynamicImage && data.itemDetailData.pictureData
                    ? `<img src="${data.itemDetailData.pictureData}" style="max-width: 480px;" class="rounded float-start" alt="Product Image">`
                    : `<img src="/image/items/${itemCode}.jpg" style="max-width: 480px;" class="rounded float-start" alt="Product Image">`;
                    
                    var modalContent = `
                        <div class="tab-content">
                            <div class="tab-pane show active" id="content1">
                                <div class="row">
                                    <div class="col-6">
                                        ${imageHtml}
                                    </div>
                                    <div class="col-6">
                                        <ul class="list-group">
                                            <li class="list-group-item">
                                                <strong>Temel Ölçü Birimi:</strong> ${data.itemDetailData.baseUnitOfMeasure}
                                            </li>
                                            <li class="list-group-item">
                                                <strong>Aylık Baskı Hacmi:</strong> ${data.itemDetailData.monthlyPrintVolume}
                                            </li>
                                            <li class="list-group-item">
                                                <strong>Baskı Kapasitesi:</strong> ${data.itemDetailData.printingCapacity}
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>

                            <!-- Aksesuar ve bileşenler içeriği -->
                            <div class="tab-pane" id="content2">
                                <div class="row">
                                    <div class="col-12">
                                        <p>Aksesuar & Bileşenler İçeriği Buraya Gelecek</p>
                                    </div>
                                </div>
                            </div>

                            <!-- Saf Malzemeler tabı içerik -->
                            <div class="tab-pane" id="content3">
                                <div class="row">
                                    <div class="col-12">
                                        <table class="table">
                                            <thead class="thead-dark">
                                                <tr>
                                                    <th scope="col">Madde No</th>
                                                    <th scope="col">Bileşen No</th>
                                                    <th scope="col">Açıklama</th>
                                                    <th scope="col">Sipariş Açıklama</th>
                                                    <th scope="col">Miktar</th>
                                                    <th scope="col">#</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                ${console.log(data.itemComponentData)}
                                                ${data.itemComponentData ? data.itemComponentData.map(item => `
                                                    <tr>
                                                        ${console.log(item.ItemNo)}
                                                        <td>${item.itemNo}</td>
                                                        <td>${item.componentItemNo}</td>
                                                        <td>${item.description}</td>
                                                        <td><input type="text" class="form-control"></td>
                                                        <td><input type="number" class="form-control"></td>
                                                        <td><button type="button" class="btn btn-success">Ekle</button></td>
                                                    </tr>
                                                `).join('') : '<tr><td colspan="6">Bileşen bulunamadı.</td></tr>'}
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;

                    $('#InfoModal .modal-body').html(modalContent);
                })
                .catch(error => {
                    console.error('Hata:', error);
                    $('#InfoModal .modal-body').html('<p>Veri yüklenirken bir hata oluştu.</p>');
                });
        });
    });
</script>