<style>
    table {
        width: 100%;
        border-collapse: collapse;
    }

    th,
    td {
        border: 1px solid #ccc;
        padding: 8px;
        text-align: left;
    }

    th {
        cursor: pointer;
        background-color: #f4f4f4;
    }

    th:hover {
        background-color: #ddd;
    }

    input[type="text"],
    input[type="number"] {
        width: 100%;
        padding: 5px;
        margin: 2px 0;
    }
</style>

<table id="myTable">
    <thead>
        <tr>
            <th scope="col" class="sortable" onclick="sortTable(0)">Madde Kategori</th>
            <th scope="col" class="sortable" onclick="sortTable(1)">Ürün Grup</th>
            <th scope="col" class="sortable" onclick="sortTable(2)">Özellikler</th>
            <th scope="col" class="sortable" onclick="sortTable(3)">Madde Kodu</th>
            <th scope="col" class="sortable" onclick="sortTable(4)">Madde Açıklama</th>
            <th scope="col" class="sortable" onclick="sortTable(5)">Alternatif Kod</th>
            <th scope="col" class="sortable" onclick="sortTable(6)">Para Birimi</th>
            <th scope="col" class="sortable" onclick="sortTable(7)">Satış Fiyatı</th>
            <th scope="col" class="sortable" onclick="sortTable(8)">Sipariş Açıklama</th>
            <th scope="col" class="sortable" onclick="sortTable(9)">Adet</th>
            <th scope="col" class="sortable" onclick="sortTable(10)">#</th>
        </tr>
        <tr>
            <th scope="col"></th>
            <th scope="col"></th>
            <th scope="col"></th>
            <th scope="col"><input type="text" class="form-control" id="filterItemCode"></th>
            <th scope="col"><input type="text" class="form-control" id="filterItemDescription"></th>
            <th scope="col"><input type="text" class="form-control" id="filterAlternativeCode"></th>
            <th scope="col"></th>
            <th scope="col"></th>
            <th scope="col"></th>
            <th scope="col"></th>
            <th scope="col"></th>
        </tr>
    </thead>
    <tbody>
        @try
        {
            foreach (var items in Model.Items)
            {
                    <tr>
                        <td>@items.ItemCategory</td>
                        <td>@items.ProductGroup</td>
                        <td><button type="button" class="btn btn-primary" data-bs-toggle="modal"
                                data-bs-target="#InfoModal" data-itemcode="@items.ItemCode">Detay</button></td>
                        <td>@items.ItemCode</td>
                        <td>@items.ItemDescription</td>
                        <td>@items.AlternativeCode</td>
                        <td>@items.CurrencyCode</td>
                        <td>@items.FormattedPrice</td>
                        <form method="post" asp-controller="Order" asp-action="AddToBasket" class="d-flex gap-2"> 
                            <td>
                                <input type="hidden" id="pItemNo" name="pItemNo" value="@items.ItemCode" />
                                <input type="text" id="pSalesDescription" name="pSalesDescription" class="form-control" style="min-width: 200px;"/>
                            </td>
                            <td><input type="number" id="pQuantity" name="pQuantity" min="0" class="form-control"/></td>
                            <td><button type="submit" class="btn btn-success">Ekle</button></td>
                        </form>
                    </tr>
            }
        }
        catch
        {

        }
    </tbody>
</table>

<script>
    let sortOrder = [true, true, true, true, true, true, true, true, true, true];

    function sortTable(columnIndex) {
        let table = document.getElementById("myTable");
        let rows = Array.from(table.rows).slice(2);
        let isAscending = sortOrder[columnIndex];
        sortOrder[columnIndex] = !isAscending;

        rows.sort((rowA, rowB) => {
            let cellA = rowA.cells[columnIndex].textContent.trim();
            let cellB = rowB.cells[columnIndex].textContent.trim();

            if (columnIndex === 7) {
                cellA = parseFloat(cellA.replace(/[^0-9.-]+/g, ""));
                cellB = parseFloat(cellB.replace(/[^0-9.-]+/g, ""));
            }

            if (isNaN(cellA) || isNaN(cellB)) {
                return isAscending ? cellA.localeCompare(cellB) : cellB.localeCompare(cellA);
            } else {
                return isAscending ? cellA - cellB : cellB - cellA;
            }
        });
        
        rows.forEach(row => table.appendChild(row));
    }

    @* function filterTable() {
        let input = document.getElementById("filterItemCode");
        let filter = input.value.toUpperCase();
        let table = document.getElementById("myTable");
        let rows = table.getElementsByTagName("tr");
        
        for (let i = 2; i < rows.length; i++) {
            let cells = rows[i].getElementsByTagName("td");
            if (cells.length > 3) {
                let itemCodeCell = cells[3].textContent || cells[3].innerText;
                if (itemCodeCell.toUpperCase().indexOf(filter) > -1) {
                    rows[i].style.display = "";
                } else {
                    rows[i].style.display = "none";
                }
            }
        }
    }     *@
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const input = document.getElementById("filterItemCode");

        input.addEventListener("keydown", function (event) {
            if (event.key === "Enter") {
                event.preventDefault();

                let value = input.value.trim();

                if (value === "") return;

                fetch(`/Order/GetAllFilterItems?itemCode=${encodeURIComponent(value)}`)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error("Sunucu hatası");
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log(data);
                        updateTable(data);
                    })
                    .catch(error => {
                        console.error("Hata:", error);
                        alert("Veri alınırken hata oluştu.");
                    });
            }
        });

        function updateTable(data) {
            const tbody = document.querySelector("#myTable tbody");
            tbody.innerHTML = "";

            data.forEach(item => {
                let row = document.createElement("tr");
                row.innerHTML = `
                    <td>${item.itemCategory}</td>
                    <td>${item.productGroup}</td>
                    <td><button type="button" class="btn btn-primary" data-bs-toggle="modal"
                        data-bs-target="#InfoModal" data-itemcode="${item.itemCode}">Detay</button></td>
                    <td>${item.itemCode}</td>
                    <td>${item.itemDescription}</td>
                    <td>${item.alternativeCode}</td>
                    <td>${item.currencyCode}</td>
                    <td>${item.formattedPrice}</td>
                    <td><input type="text" class="form-control"></td>
                    <td><input type="number" class="form-control"></td>
                    <td><button type="button" class="btn btn-success">Ekle</button></td>
                `;
                tbody.appendChild(row);
            });
        }
    });
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const quantityInputs = document.querySelectorAll('input[name="pQuantity"]');

        quantityInputs.forEach(input => {
            input.addEventListener("focus", function () {
                if (input.value === "") {
                    input.value = "0";
                }
            });
        });
    });
</script>

<script>
    function addToBasket() {
        $.ajax({
            url: '/Order/AddToBasket',
            type: 'POST',
            data: {
                pItemNo: $('#pItemNo').val(),
                pQuantity: $('#pQuantity').val(),
                pSalesDescription: $('#pSalesDescription').val()
            },
            success: function (response) {
                alert(response.message); // Popup veya başka bir UI gösterebilirsiniz
            },
            error: function () {
                alert("Bir hata oluştu.");
            }
        });

        return false; // Form gönderimini engeller
    }
</script>